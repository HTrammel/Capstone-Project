source('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
debugSource('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
source('~/Github/Coursera/Capstone-Project/load_corpus_v1r3.R')
source('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
source('~/Github/Coursera/Capstone-Project/explore_mini.R')
source('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
source('~/Github/Coursera/Capstone-Project/explore_mini.R')
topBlogWords
source('~/Github/Coursera/Capstone-Project/explore_mini.R')
topWords
summary(all_corpus)
source('~/Github/Coursera/Capstone-Project/profanity_filter.R')
View(block_list)
?read.csv
source('~/Github/Coursera/Capstone-Project/profanity_filter.R')
View(block_list)
source('~/Github/Coursera/Capstone-Project/profanity_filter.R')
View(block_list)
source('~/Github/Coursera/Capstone-Project/profanity_filter.R')
View(block_list)
source('~/Github/Coursera/Capstone-Project/profanity_filter.R')
View(block_list)
as.character(block_list)
source('~/Github/Coursera/Capstone-Project/profanity_filter.R')
as.character(block_list)
source('~/Github/Coursera/Capstone-Project/profanity_filter.R')
as.character(block_list)
View(block_list)
source('~/Github/Coursera/Capstone-Project/profanity_filter.R')
show(block_dictionary)
blog_dfm[,bitch]
blog_dfm
blog_corpus[1234]
blog_dfm[1234]
blog_dfm[,"bitch"]
source('~/Github/Coursera/Capstone-Project/explore_mini.R')
topWords
topWords == "bitch"
topWords == "shit"
topWords["shit"]
topWords["bitch"]
blog_dfm[,"shit"]
blog_dfm[,"friend"]
blog_dfm[,c("frient","they","tomorrow")]
blog_dfm[,features == "bitch"]
blog_dfm[,[1:4]]
blog_dfm[,1:4]
source('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
all_dfm[,"her"]
summary(all_dfm)
str(all_dfm)
nrow(kwic(all_corpus,"bitch"))
nrow(kwic(all_corpus,"cunt"))
all_dfm[,1:5]
clean_dfm <- dfm(all_corpus, dictionary=block_dictionary)
clean_dfm[,"bitch"]
clean_dfm[,features =="bitch"]
heat(clean_dfm)
head(clean_dfm)
head(clean_dfm,100)
clean_dfm <- dfm(all_corpus)
head(clean_dfm,100)
clean_dfm[,"years"]
clean_dfm[,"years"]$text
install.packages("jomo")
install.packages(c("raster", "rgdal", "rjags", "rmarkdown", "rms", "spdep", "vcdExtra"), lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
kwic(all_corpus,"cunt")
source('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
?tokenize
source('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
debugSource('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
source('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
blog_tok[,1:5]
blog_tok[1:5]
source('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
?tokenize
source('~/Github/Coursera/Capstone-Project/load_corpus_mini.R')
head(all_dfm)
install.packages(c("evd", "Matching", "rgdal", "rjags", "rms", "spdep"), lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
source('~/Github/Coursera/Capstone-Project/test_quanteda.R')
tokenize(txt)
tokenize(txt, removeNumbers=TRUE, removePunct=TRUE)
tokenize(txt, removeNumbers=FALSE, removePunct=TRUE)
tokenize(txt, removeNumbers=TRUE, removePunct=FALSE)
tokenize(txt, removeNumbers=FALSE, removePunct=FALSE, removeSeparators=FALSE)
source('~/Github/Coursera/Capstone-Project/test_quanteda.R')
txt
str(txt)
source('~/Github/Coursera/Capstone-Project/test_quanteda.R')
install.packages("lambda.tools")
source('~/Github/Coursera/Capstone-Project/test_quanteda.R')
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
x
x <- word_count_simple(en_news)
head(x,10)
grep("_", en_news)
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
x <- word_count_simple(en_news)
head(x,10)
head(x,20)
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
x
x <- word_count_simple(en_news)
head(x,20)
grep("Suleman", en_news)
en_news[5239]
en_news[7082]
debugSource('~/Github/Coursera/Capstone-Project/explore_backoff.R')
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
x
x <- word_count_simple(en_news)
head(x,20)
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
x
x <- word_count_simple(en_news)
head(x,20)
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
v
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
?lapply
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
v
str(v)
w
x
count(x)
?"table"
as.list(x)
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
v
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
v
count(v)
?count
?str_count
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
v
str_count(v)
sapply(v, sum(str_count()))
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
v
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
v
?"table"
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
v
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
summary(v)
x$dimnames <- c("words","freq")
wl <- x$dimnames <- c("words","freq")
wl
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
v
v["and"]
v[1]
source('~/Github/Coursera/Capstone-Project/explore_backoff.R', echo=TRUE)
bmp <- word_map(en_blog)
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
tail(n_grams)
head(n_grams)
head(n_grams,40)
head(n_grams,100)
head(n_grams,200)
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
n_grams["the"]
n_grams["the boy"]
n_grams["the boy and girl"]
n_grams["boy and girl"]
n_grams["boy and"]
n_grams["I am glad"]
n_grams["a case of"]
n_grams["a case of beer"]
n_grams["a case of cheese"]
n_grams["a case of soda"]
n_grams["a case of pretzels"]
n_grams["case of pretzels"]
n_grams["case of beer"]
n_grams["case of soda"]
n_grams["case of cheese"]
n_grams["would mean the most"]
n_grams["would mean the world"]
n_grams["would mean the universe"]
n_grams["would mean the best"]
tables()
n_grams["make me the"]
n_grams["make me"]
library(ngrams)
install.packages("ngrams")
?connections
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
str(en_blog)
source('~/Github/Coursera/Capstone-Project/explore_backoff.R')
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r2.R')
rm(en_all)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r2.R')
en_all <- as.list(en_all)
vocab <- as.list(vocab)
vocab["am happy"]
vocab["sunny day"]
vocab["sunny"]
vocab[123]
head(vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r2.R')
rm(en_all)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r2.R')
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
View(n_grams)
View(vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
View(n_grams)
View(vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
View(n_grams)
View(vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
View(n_grams)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
lapply(vocab, sum())
lapply(vocab, function(x) s <- s+1)
s <-0
lapply(vocab, function(x) s <- s+1)
lapply(vocab, function(x) s <- s+N)
lapply(vocab, function(x) s <- s+x)
lapply(vocab, function(x) s <- s+x[N])
voc_ord <- vocab %>% group_by(words) %>% tally(n)
voc_ord <- vocab %>% group_by(words) %>% tally()
View(voc_ord)
View(vocab)
View(voc_ord)
?summarise_each
voc_ord <- vocab %>% group_by(words) %>% summarise_each(funs(min_rank))
View(voc_ord)
voc_ord <- vocab %>% group_by(words) %>% count()
View(voc_ord)
voc_ord <- vocab %>% group_by(words) %>% count(words)
View(voc_ord)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
View(vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
vocab[1:]
vocab
vocab[[1:]]
vocab[[1:
]
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
vocab[1:10]
vocab[1:]
vocab[1:length(vocab)]
sapply(vocab, function(words) s <- s + N)
str(vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
txt
vocab
?Reduce
lapply (vocab, sum())
lapply (vocab, Reduce("+",x))
lapply (vocab, function(x) Reduce("+",x))
voc_ord <- lapply (vocab, function(x) Reduce("+",x))
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r2.R')
head(vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r2.R')
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
View(tx_ngrams)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
View(tx_vocab)
View(tx_ngrams)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
dt_len <- length(dt)
dt_len <- nrow(dt)
dt_len <- nrows(dt)
dt_len <- nrow(dt)
str(dt)
str(tx_vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
tail(tx_vocab)
tx_vocab[words="we",]
tx_vocab[words=="we",]
tx_vocab[words=="we",]$in
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
tx_vocab[words=="we",]$id
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
str(tx_ngrams)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
View(r_ngram)
chmatch(c("of, the", tx_vocab[words]))
chmatch(c("of, the", tx_vocab$words))
chmatch(c("of, the", table = tx_vocab$words))
chmatch(c("of, the"), table = tx_vocab$words))
chmatch(c("of, the"), table = tx_vocab$words)
chmatch(c("of, the"), tx_vocab$words)
chmatch(c("of"), tx_vocab$words)
View(tx_vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
View(tx_ngrams)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
View(tx_ngrams)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
head(r_ngram)
r_ngram[1:5]
r_ngram[1]
r_ngram <- sapply(tx_ngrams, reduce_ngram(x))
r_ngram <- sapply(tx_ngrams, reduce_ngram(wordstem()))
r_ngram <- sapply(tx_ngrams, reduce_ngram(wordstem))
r_ngram <- sapply(tx_ngrams, reduce_ngram(words))
r_ngram <- sapply(tx_ngrams, function(x) reduce_ngram(x$words))
r_ngram <- sapply(tx_ngrams, function(x) reduce_ngram(x))
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
r_ngram <- sapply(tx_ngrams, reduce_ngram(x))
r_ngram <- sapply(tx_ngrams, reduce_ngram())
r_ngram <- sapply(tx_ngrams, reduce_ngram)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r3.R')
install.packages(c("rgdal", "rjags"), lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R')
debugSource('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R')
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R', echo=TRUE)
head(r_vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R')
View(r_vocab)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R')
library("stringi", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
chartr
?chartr
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R')
?toLower
?"stringi-arguments"
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R')
voc_dfm <- dfm(en_all,
toLower = TRUE,
removeSeparators = TRUE,
removeNumbers = TRUE,
removePunct = TRUE,
removeTwitter = TRUE,
verbose = TRUE)
plot(voc_dfm, max.words = 100)
library(tm)
plot(topfeatures(voc_dfm, 100), log = "y", cex = .6, ylab = "Term frequency")
topfeatures(voc_dfm,100)
print(voc_dfm)
print(voc_dfm, show.values= TRUE)
shiny::runApp('app')
topfeatures(voc_dfm,25)
install.packages(c("htmltools", "rgdal", "rjags"), lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
shiny::runApp('app')
install.packages("shinythemes")
shiny::runApp('app')
### Sources
shiny::runApp('app')
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
library("tm", lib.loc="~/Library/R/3.2/library")
voc_dfm <- dfm(vocab,
toLower = TRUE,
removeSeparators = TRUE,
removeNumbers = TRUE,
removePunct = TRUE,
removeTwitter = TRUE,
verbose = TRUE)
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
debugSource('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
con <- file("Data/final/en_US/samp_blog.txt",open="rb")
tmp <- scan(con)
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
topfeatures(voc_dfm)
summary(voc_dfm)
ng_dfm <- dfm(n_grams)
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
topfeatures(ng_dfm)
topfeatures(voc_dfm)
topfeatures(voc_dfm, n=20)
topfeatures(ng_dfm, n=20)
voc_dfm <- dfn(vocab)
voc_dfm <- dfm(vocab)
ng_dfm <- dfm(n_grams)
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
?diag
source('~/Github/Coursera/Capstone-Project/markov_chain_lesson.R')
distrib=initial%*%M
game=rep(NA,1000)
for(h in 1:length(game)){
game[h]=distrib[n+1]
distrib=distrib%*%M}
plot(1-game[1:200],type="l",lwd=2,col="red",
ylab="Probability to be still playing")
install.packages("markovchain")
install.packages(c("GGally", "rgdal", "rjags", "rmarkdown", "viridis"), lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ng_mc <- as(ng_dtm, "markovchain")
ng_mc <- as(ng_dfm, "markovchain")
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
ng_mc <- as(ng_dfm, "markovchain")
ng_mc <- as(ng_dtm, "markovchain")
ng_mc <- as(as.matrix(ng_dtm), "markovchain")
head(ng_dtm)
head(ng_dfm)
head(ng_dfm,20)
topfeatures(ng_dfm, n= 50)
topfeatures(ng_dfm, n= 100)
topfeatures(n_grams)
topfeatures(ng_dfm, n= 200)
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
topfeatures(ng_dfm, n= 100)
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
topfeatures(ng_dfm, n= 100)
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
head(n_grams)
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
View(voc_colo)
?which
voc_colo(,word2 == "be")
voc_colo[,word2 == "be"]
voc_colo[,voc_colo[,word2 == "be"]]
voc_colo[,voc_colo[word2 == "be"]]
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r1.R')
voc_colo[,voc_colo[word2 == "be"]]
tables()
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R')
View(voc_colo)
tail(voc_colo, 50)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R')
tables()
saveRDS(voc_colo, "Data/voc_collo.RDS")
tail(voc_colo, 50)
head(voc_colo, 50)
voc_colo[,voc_colo[word2 == "be"]]
voc_colo[,voc_colo[word2 == "told"]]
voc_colo[,voc_colo[word2 == "told" & word3 == "a"]]
detach("package:parallel", unload=TRUE)
library("parallel", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
shiny::runApp('app')
source('~/Github/Coursera/Capstone-Project/play.R')
shiny::runApp('app')
filter(voc_colo, count >= 10)
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R')
voc_colo[,voc_colo[word2 == "told" & word3 == "a"]]
source('~/Github/Coursera/Capstone-Project/explore_backoff_v1r5.R')
voc_colo[,voc_colo[word2 == "told" & word3 == "a"]]
head(voc_colo)
voc_colo[,voc_colo[word2 == "told" & word3 == "a"]]
voc_colo[,voc_colo[word2 == "told" & word3 == "me"]]
voc_colo[,voc_colo[word1 == "told" & word2 == "me"]]
