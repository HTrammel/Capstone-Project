demo()
graphics()
demo(graphics)
q()
install.packages("manipulate")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages(c("knitr", "manipulate", "rmarkdown"))
install.packages("KernSmooth")
library(KernSmooth)
calldetail <- read.csv("H:/InIn Data/calldetail.csv", header=FALSE)
View(calldetail)
calldetail <- read.csv("H:/InIn Data/calldetail.csv", header=TRUE)
View(calldetail)
agentactivitylog <- read.csv("H:/InIn Data/agentactivitylog.csv")
View(agentactivitylog)
source('H:/InIn Data/call_center_data.r')
View(calldetail)
View(agentactivitylog)
install.packages("swirl")
View(calldetail)
View(calldetail)
View(agentactivitylog)
View(calldetail)
ls()
rm(list=ls())
ls()
save.image("C:\\Users\\hlt\\Documents\\.RData")
library(datasets)
data(mtcars)
with(mtcars, tapply(hp,cyl,mean))
d <- with(mtcars, tapply(hp,cyl,mean))
c4 <- d$4
c4 <- d[4]
c8 <- d[8]
c4
d
d[[4]]
d[4]
d[,4]
class(d)
d[1]
d[1,2]
d[2,1]
d[1]
rowmean(d[1])
q()
!(0 >= -1)
!FALSE
TRUE && FALSE || 9 >= 4 && 3 <6
q()
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
q()
sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
q()
install.packages("RMySQL",type="source")
con <- dbConnect(MySQL(), host="127.0.0.1", port=3306, user="hlt", password="Idon'tlikeCARDS")
library(RMySQL)
con <- dbConnect(MySQL(), host="127.0.0.1", port=3306, user="hlt", password="Idon'tlikeCARDS")
con
q()
update.packages(ask='graphics',checkBuilt=TRUE)
q()
?RWeka
install.packages(RWeka)
install.packages("RWeka")
install.packages("RWekajars")
install.packages("rJava")
install.packages("OpenNLP")
install.packages("openNLP")
q()
update.packages(ask='graphics',checkBuilt=TRUE)
save.image("C:\\GitHub\\Coursera\\Capstone-Project\\.RData")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_mini_v1r1.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_mini_v1r1.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_mini_v1r1.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_mini_v1r1.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_mini_v1r1.R")
?scan
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_mini_v1r1.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_mini_v1r1.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_mini_v1r1.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
?corpus
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
?tokenize
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
source("C:\\GitHub\\Coursera\\Capstone-Project\\explore_backoff_v1r7.R")
q()
source('C:/GitHub/Coursera/Capstone-Project/explore_backoff_v1r7.R')
source('C:/GitHub/Coursera/Capstone-Project/explore_mini_v1r1.R')
head(ng_1)
head(ng_4)
head(ng_3)
head(ng_2)
debugSource('C:/GitHub/Coursera/Capstone-Project/explore_mini_v1r1.R')
source('C:/GitHub/Coursera/Capstone-Project/explore_mini_v1r1.R')
dfm(ng_4)
n4 <- dfm(ng_4)
n4
head(n4)
tail(n4)
features(n4)
tail(features(n4))
subset(n4,feature=="the loveliest dresses")
print(n4)
install.packages(c("fields", "gamlss", "gamlss.data", "rgl"))
plot(kwic(ng1))
plot(kwic(ng_1))
str(ng_1)
subset(ng_4, list =="the loveliest dresses")
subset(ng_4, "the loveliest dresses")
plot(kwic(ng_1,"dresses"))
source('C:/GitHub/Coursera/Capstone-Project/explore_mini_v1r2.R')
colSums(voc_dfm, dims - 2)
?colSums
library(Matrix)
voc_freq <- colSums(voc_dfm. na.rm = TRUE)
voc_freq <- colSums(voc_dfm. na.rm = TRUE, sparseResult = TRUE)
voc_freq <- colSums(voc_dfm)
head(voc_freq)
voc_names <- names(voc_freq)
data_frame(voc_names, voc_freq)
voc_list <- data_frame(voc_names, voc_freq)
View(voc_list)
source('C:/GitHub/Coursera/Capstone-Project/explore_mini_v1r2.R')
warnings()
source('C:/GitHub/Coursera/Capstone-Project/explore_mini_v1r2.R')
save(voc_df,"Data/voc_df.Rds")
saveRDS(voc_df,"Data/voc_df.Rds")
View(voc_df)
source('C:/GitHub/Coursera/Capstone-Project/explore_mini_v1r2.R')
View(voc_df)
filter(voc_df, voc_names == "that is")
?file.remove
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r2.R')
source('~/Github/Coursera/Capstone-Project/draft_backoff_v1r1.R')
rm(list=c("voc_freq",
"voc_names",
"vocab",
"voc_corpus",
"en_all"
))
source('~/Github/Coursera/Capstone-Project/draft_backoff_v1r1.R')
rm(b, n, t)
source('~/Github/Coursera/Capstone-Project/draft_backoff_v1r1.R')
View(voc_df)
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r2.R')
filter(samp_df, voc_terms == "these Americans")
filter(samp_df, samp_names == "these Americans")
filter(samp_df, samp_names == "hard to tell")
filter(samp_df, samp_names == "hard")
filter(samp_df, samp_names == "hard to")
View(samp_df)
filter(samp_df, samp_names == "a guilty pleasure")
filter(samp_df, samp_names == "guilty pleasure bringing")
filter(samp_df, samp_names == "a huge huge")
stri_count_words("a huge huge")
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r2.R')
sapply(samp_names, function(x) stri_count_words(x))
samp_names2 <- mutate(samp_names, word_count = stri_count_words)
samp_df2 <- samp_df %>% mutate_each(funs, stri_count_words)
samp_df2 <- samp_df %>% mutate_each(funs, stri_count_words(samp_names))
samp_df2 <- samp_df %>% mutate(word_count = stri_count_words(samp_names))
View(samp_df2)
source('~/Github/Coursera/Capstone-Project/explore_mini_v1r2.R')
source('~/Github/Coursera/Capstone-Project/draft_backoff_v1r1.R')
?match
source('~/Github/Coursera/Capstone-Project/draft_backoff_v1r1.R')
filter(voc_df, voc_names == "guilty pleasure bringing")
View(voc_df)
filter(voc_df, voc_names == "guilty")
filter(voc_df, voc_names == "guilty pleasure")
filter(voc_df, voc_names == "guilty pleasure bringing")
filter(voc_df, voc_names == "guilty pleasure bring")
filter(voc_df, voc_names == "a guilty pleasure")
